int IRsensor1Pin=A0;
int IRsensor1Value=0;
int IRsensor2Pin=A1;
int IRsensor2Value=0;

// robot location service
// 0 is up
// 1 is right
// 2 is down
// 3 is left
int robotDirection = 2;

int xcoordinate = 2;
int ycoordinate = 1;

int obstacleSeen=1000;

int arraything [6] [6] =
{ 
  {    1,1,1,1,1,1    }
  ,
  {    1,1,0,1,0,1    }
  ,
  {    1,1,0,1,0,1    }
  ,
  {    1,1,0,1,0,1    }
  ,
  {    1,1,0,1,1,1    }
  ,
  {    1,1,1,0,1,1    }
};

void setup() {
  Serial.begin(9600); // Set baudrate for serial communication

  pinMode(IRsensor1Pin, INPUT);

}

// This is the main program, this is what the robot do
void loop() {
  float distance1 = 12343.85 * pow(analogRead(IRsensor1Pin),-1.15);
  Serial.print("IR1 Reading: ");
  Serial.print(distance1);
  Serial.print("\t");
  
  float distance2 = 12343.85 * pow(analogRead(IRsensor2Pin),-1.15);
  Serial.print("IR2 Reading: ");
  Serial.print(distance2);
  Serial.print("\t");
  
  Serial.println("");
  delay(1000);

   while (1==1){
    if (isFrontOpen() == true) {
      WalkF();
      delay (2000);
    }
    else
      if (isRightOpen() == true) {
      turnRight();
      delay (2000);
    }
    else
      if (isLeftOpen() == true) {
        turnLeft();
        delay (2000);
      } 
     else {
        turnAround();
        delay (2000);
      }
  }
  //WalkF();
  //PushUps();
  //Stand();
  //Hexapod();
 
}
void middle(){
  LEG1_A90();
  LEG2_A90();
  LEG3_A90();
  LEG4_A90();
  LEG5_A90();
  LEG6_A90();

  LEG1_B90();
  LEG2_B90();
  LEG3_B90();
  LEG4_B90();
  LEG5_B90();
  LEG6_B90();
}
void Center(){
  LEG1_A90();
  LEG2_A90();
  LEG3_A90();
  LEG4_A90();
  LEG5_A90();
  LEG6_A90();

  LEG1_B90();
  LEG2_B90();
  LEG3_B90();
  LEG4_B90();
  LEG5_B90();
  LEG6_B90();
  
  delay(4000);

  LEG1_B130();

  delay(200);

  LEG1_A130();
  LEG1_B90();

  delay(200);

  LEG2_B130();

  delay(200);

  LEG2_A70();
  LEG2_B90();

  delay(200);

  LEG3_B100();

  delay(200);

  LEG3_A110();
  LEG3_B90();

  delay(200);

  LEG4_B130();

  delay(200);

  LEG4_A90();
  LEG4_B90();

  delay(200);

  LEG5_B130();

  delay(200);

  LEG5_A90();
  LEG5_B90();

  delay(200);

  LEG6_B130();

  delay(200);

  LEG6_A70();
  LEG6_B90();

  delay(200);

}
void Hexapod(){

  LEG1_B130();
  LEG4_B130();
  LEG5_B130();

  delay(400);

 LEG1_A110();
 LEG2_A110();
 LEG3_A80();
 LEG4_A80();
 LEG5_A80();
 LEG6_A110();
 
 delay(400);

 LEG1_B70();
 LEG4_B70();
 LEG5_B70();

 delay(400);

 LEG2_B130();
 LEG3_B130();
 LEG6_B130();

 delay(400);

 LEG1_A90();
 LEG2_A90();
 LEG3_A90();
 LEG4_A90();
 LEG5_A90();
 LEG6_A90();

 delay(400);

 LEG1_A80();
 LEG2_A80();
 LEG3_A110();
 LEG4_A110();
 LEG5_A110();
 LEG6_A80();

 delay(400);

 LEG2_B70();
 LEG3_B70();
 LEG6_B70();

 delay(400);
 

  
}
  

void Stand(){
  LEG1_B90();
  LEG2_B90();
  LEG3_B90();
  LEG4_B90();
  LEG5_B90();
  LEG6_B90();

}
void PushUps(){
  LEG1_B90();
  LEG2_B90();
  LEG3_B90();
  LEG4_B90();
  LEG5_B90();
  LEG6_B90();


  delay(2000);

  LEG1_B80();
  LEG2_B80();
  LEG3_B80();
  LEG4_B80();
  LEG5_B80();
  LEG6_B80();

  delay(200);

  LEG1_B70();
  LEG2_B70();
  LEG3_B70();
  LEG4_B70();
  LEG5_B70();
  LEG6_B70();


  delay(200);

  LEG1_B60();
  LEG2_B60();
  LEG3_B60();
  LEG4_B60();
  LEG5_B60();
  LEG6_B60();


  delay(2000);
  
  LEG1_B70();
  LEG2_B70();
  LEG3_B70();
  LEG4_B70();
  LEG5_B70();
  LEG6_B70();


  delay(200);
  
  LEG1_B80();
  LEG2_B80();
  LEG3_B80();
  LEG4_B80();
  LEG5_B80();
  LEG6_B80();


  delay(200);

  LEG1_B90();
  LEG2_B90();
  LEG3_B90();
  LEG4_B90();
  LEG5_B90();
  LEG6_B90();

  delay(2000);

  LEG1_B100();
  LEG2_B100();
  LEG3_B100();
  LEG4_B100();
  LEG5_B100();
  LEG6_B100();


  delay(200);

  LEG1_B110();
  LEG2_B110();
  LEG3_B110();
  LEG4_B110();
  LEG5_B110();
  LEG6_B110();


  delay(200);

  LEG1_B120();
  LEG2_B120();
  LEG3_B120();
  LEG4_B120();
  LEG5_B120();
  LEG6_B120();


  delay(200);

  LEG1_B130();
  LEG2_B130();
  LEG3_B130();
  LEG4_B130();
  LEG5_B130();
  LEG6_B130();


  delay(2000);

  LEG1_B120();
  LEG2_B120();
  LEG3_B120();
  LEG4_B120();
  LEG5_B120();
  LEG6_B120();


  delay(200);

  LEG1_B110();
  LEG2_B110();
  LEG3_B110();
  LEG4_B110();
  LEG5_B110();
  LEG6_B110();

  delay(200);

  LEG1_B100();
  LEG2_B100();
  LEG3_B100();
  LEG4_B100();
  LEG5_B100();
  LEG6_B100();


  delay(200);
}
void WalkF() {
 
  //1stPhase

  LEG12_A110();
  LEG12_B70();
  
  LEG11_A130();
  LEG11_B70();

  LEG10_A100();
  LEG10_B70();

  LEG9_A130();
  LEG9_B110();

  LEG8_A90();
  LEG8_B70();

  LEG7_A90();
  LEG7_B130();

  LEG6_A80();
  LEG6_B70();

  LEG5_A50();
  LEG5_B110();

  LEG4_A70();
  LEG4_B70();

  LEG3_A50();
  LEG3_B70();

  LEG2_A60();
  LEG2_B70();

  LEG1_A60();
  LEG1_B70(); 

  delay(200);

  //2nd Phase

  LEG12_A120();

  LEG11_A120();

  LEG10_A110();
  
  LEG9_B70();

  LEG8_A100();

  LEG7_A130();
  LEG7_B110();

  LEG6_A90();

  LEG5_A90();
  LEG5_B130();

  LEG4_A80();
  
  LEG3_B110();

  LEG2_A70();

  LEG1_A50();

  delay(200);
  
  //3rd Phase

  LEG12_A130();  

  LEG11_A110();

  LEG10_A120();

  LEG9_A120();

  LEG8_A110();
  
  LEG7_B70();

  LEG6_A100();

  LEG5_A130();
  LEG5_B110();

  LEG4_A90();
  
  LEG3_A90();
  LEG3_B130();

  LEG2_A80();
  
  LEG1_B110();

  delay(200);

  //4th Phase

  LEG12_B110();

  LEG11_A100();

  LEG10_A130();

  LEG9_A110();

  LEG8_A120();
  
  LEG7_A120();

  LEG6_A110();

  LEG5_B70();

  LEG4_A100();
  
  LEG3_A130();
  LEG3_B110();

  LEG2_A90();
  
  LEG1_A90();
  LEG1_B130();

  delay(200);

  //5th Phase

  LEG12_A90();
  LEG12_B130();

  LEG11_A90();

  LEG10_B110();

  LEG9_A100();

  LEG8_A130();

  LEG7_A110();

  LEG6_A120();

  LEG5_A120();

  LEG4_A110();

  LEG3_B70();

  LEG2_A100();

  LEG1_A130();
  LEG1_B110();
  
  delay(200);

  //6th Phase

  LEG12_A50();
  LEG12_B110();

  LEG11_A80();

  LEG10_A90();
  LEG10_B130();

  LEG9_A90();

  LEG8_B110();
 
  LEG7_A100();

  LEG6_A130();

  LEG5_A110();

  LEG4_A120();

  LEG3_A120();

  LEG2_A110();

  LEG1_B70();

  delay(200);

  //7th Phase

  LEG12_B70();

  LEG11_A70();

  LEG10_B110();
  
  LEG9_A80();

  LEG8_A90();
  LEG8_B130();

  LEG7_A90();
  
  LEG6_A130();
  LEG6_B110();

  LEG5_A100();

  LEG4_A130();
  
  LEG3_A110();

  LEG2_A120();
  
  LEG1_A120();

  delay(200);

  //8th Phase

  LEG12_A60();
  
  LEG11_A60();

  LEG10_B70();

  LEG9_A70();

  LEG8_A50();
  LEG8_B110();
  
  LEG7_A80();

  LEG6_A90();
  LEG6_B130();
  
  LEG5_A90();

  LEG4_B110();
  
  LEG3_A100();

  LEG2_A130();

  LEG1_A110();

  delay(200);

  //9th Phase

  LEG12_A70();

  LEG11_A50();

  LEG10_A60();

  LEG9_A60();

  LEG8_B70();

  LEG7_A70();

  LEG6_A50();
  LEG6_B110();

  LEG5_A80();

  LEG4_A90();
  LEG4_B130();

  LEG3_A90();

  LEG2_B110(); 

  LEG1_A100();

  delay(200);

  //10th Phase

  LEG12_A80();

  LEG11_B110();

  LEG10_A70();

  LEG9_A50();

  LEG8_A60();

  LEG7_A60();

  LEG6_B70();

  LEG5_A70();

  LEG4_A50();
  LEG4_B110();
  
  LEG3_A80();

  LEG2_A90();
  LEG2_B130();

  LEG1_A90();

  delay(200);

  //11th Phase

  LEG12_A90();

  LEG11_A90();
  LEG11_B130();

  LEG10_A80();

  LEG9_B110();

  LEG8_A70();

  LEG7_A50();

  LEG6_A60();

  LEG5_A60();

  LEG4_B70();
 
  LEG3_A70();

  LEG2_A50();
  LEG2_B110();

  LEG1_A80();
  
  delay(200);

  //12th Phase

  LEG12_A100();
  
  LEG11_A130();
  LEG11_B110();

  LEG10_A90();

  LEG9_A90();
  LEG9_B130();

  LEG8_A80();

  LEG7_B110();

  LEG6_A70(); 

  LEG5_A50();

  LEG4_A60();

  LEG3_A60();

  LEG2_B70();
  
  LEG1_A70();
  
  delay(200);

  Serial.println("Forward");
  if (robotDirection == 0)
    ycoordinate = ycoordinate - 1;
  if (robotDirection == 1)
    xcoordinate = xcoordinate + 1;
  if (robotDirection == 2)
    ycoordinate = ycoordinate + 1;
  if (robotDirection == 3)
    xcoordinate = xcoordinate - 1;
  delay (100);
  Serial.print("  xcoordinate " );
   Serial.print(xcoordinate);
   delay (500);
   Serial.print(" ycoordinate ");
   Serial.print(ycoordinate);
   delay (500);
   Serial.print("  robot direction: ");
   Serial.print(robotDirection);
   delay(500);
   Serial.println ();
   delay(1000);
  
   
  delay(800);
}
/************LEG 1*************************/
/************LEG 1A**************/
void LEG1_A50(){
Serial.println("#31 P1700 T500");
}
void LEG1_A60(){
Serial.println("#31 P1650 T500");
}
void LEG1_A70(){
Serial.println("#31 P1600 T500");
}
void LEG1_A80(){
Serial.println("#31 P1550 T500");
}
void LEG1_A90(){
Serial.println("#31 P1500 T500");
}
void LEG1_A100(){
Serial.println("#31 P1450 T500");
}
void LEG1_A110(){
Serial.println("#31 P1400 T500");
}
void LEG1_A120(){
Serial.println("#31 P1350 T500");
}
void LEG1_A130(){
Serial.println("#31 P1300 T500");
}

/************LEG 1B**************/

void LEG1_B50(){
Serial.println("#30 P1900 T500");
}
void LEG1_B60(){
Serial.println("#30 P1800 T500");
}
void LEG1_B70(){
Serial.println("#30 P1700 T500");
}
void LEG1_B80(){
Serial.println("#30 P1600 T500");
}
void LEG1_B90(){
Serial.println("#30 P1500 T500");
}
void LEG1_B100(){
Serial.println("#30 P1400 T500");
}
void LEG1_B110(){
Serial.println("#30 P1300 T500");
}
void LEG1_B120(){
Serial.println("#30 P1200 T500");
}
void LEG1_B130(){
Serial.println("#30 P1100 T500");
}

/************LEG 2*************************/
/************LEG 2A**************/
void LEG2_A50(){
Serial.println("#16 P1700 T500");
}
void LEG2_A60(){
Serial.println("#16 P1650 T500");
}
void LEG2_A70(){
Serial.println("#16 P1600 T500");
}
void LEG2_A80(){
Serial.println("#16 P1550 T500");
}
void LEG2_A90(){
Serial.println("#16 P1500 T500");
}
void LEG2_A100(){
Serial.println("#16 P1450 T500");
}
void LEG2_A110(){
Serial.println("#16 P1400 T500");
}
void LEG2_A120(){
Serial.println("#16 P1350 T500");
}
void LEG2_A130(){
Serial.println("#16 P1300 T500");
}

/************LEG 2B**************/

void LEG2_B50(){
Serial.println("#17 P1200 T500");
}
void LEG2_B60(){
Serial.println("#17 P1300 T500");
}
void LEG2_B70(){
Serial.println("#17 P1400 T500");
}
void LEG2_B80(){
Serial.println("#17 P1500 T500");
}
void LEG2_B90(){
Serial.println("#17 P1600 T500");
}
void LEG2_B100(){
Serial.println("#17 P1700 T500");
}
void LEG2_B110(){
Serial.println("#17 P1800 T500");
}
void LEG2_B120(){
Serial.println("#17 P1900 T500");
}
void LEG2_B130(){
Serial.println("#17 P2000 T500");
}

/************LEG 3*************************/
/************LEG 3A**************/
void LEG3_A50(){
Serial.println("#29 P1700 T500");
}
void LEG3_A60(){
Serial.println("#29 P1650 T500");
}
void LEG3_A70(){
Serial.println("#29 P1600 T500");
}
void LEG3_A80(){
Serial.println("#29 P1550 T500");
}
void LEG3_A90(){
Serial.println("#29 P1500 T500");
}
void LEG3_A100(){
Serial.println("#29 P1450 T500");
}
void LEG3_A110(){
Serial.println("#29 P1400 T500");
}
void LEG3_A120(){
Serial.println("#29 P1350 T500");
}
void LEG3_A130(){
Serial.println("#29 P1300 T500");
}

/************LEG 3B**************/

void LEG3_B50(){
Serial.println("#28 P1600 T500");
}
void LEG3_B60(){
Serial.println("#28 P1500 T500");
}
void LEG3_B70(){
Serial.println("#28 P1400 T500");
}
void LEG3_B80(){
Serial.println("#28 P1300 T500");
}
void LEG3_B90(){
Serial.println("#28 P1200 T500");
}
void LEG3_B100(){
Serial.println("#28 P1100 T500");
}
void LEG3_B110(){
Serial.println("#28 P1000 T500");
}
void LEG3_B120(){
Serial.println("#28 P900 T500");
}
void LEG3_B130(){
Serial.println("#28 P800 T500");
}

/************LEG 4*************************/
/************LEG 4A**************/
void LEG4_A50(){
Serial.println("#18 P1700 T500");
}
void LEG4_A60(){
Serial.println("#18 P1650 T500");
}
void LEG4_A70(){
Serial.println("#18 P1600 T500");
}
void LEG4_A80(){
Serial.println("#18 P1550 T500");
}
void LEG4_A90(){
Serial.println("#18 P1500 T500");
}
void LEG4_A100(){
Serial.println("#18 P1450 T500");
}
void LEG4_A110(){
Serial.println("#18 P1400 T500");
}
void LEG4_A120(){
Serial.println("#18 P1350 T500");
}
void LEG4_A130(){
Serial.println("#18 P1300 T500");
}

/************LEG 4B**************/

void LEG4_B50(){
Serial.println("#19 P1100 T500");
}
void LEG4_B60(){
Serial.println("#19 P1200 T500");
}
void LEG4_B70(){
Serial.println("#19 P1300 T500");
}
void LEG4_B80(){
Serial.println("#19 P1400 T500");
}
void LEG4_B90(){
Serial.println("#19 P1500 T500");
}
void LEG4_B100(){
Serial.println("#19 P1600 T500");
}
void LEG4_B110(){
Serial.println("#19 P1700 T500");
}
void LEG4_B120(){
Serial.println("#19 P1800 T500");
}
void LEG4_B130(){
Serial.println("#19 P1900 T500");
}

/************LEG 5*************************/
/************LEG 5A**************/
void LEG5_A50(){
Serial.println("#27 P1700 T500");
}
void LEG5_A60(){
Serial.println("#27 P1650 T500");
}
void LEG5_A70(){
Serial.println("#27 P1600 T500");
}
void LEG5_A80(){
Serial.println("#27 P1550 T500");
}
void LEG5_A90(){
Serial.println("#27 P1500 T500");
}
void LEG5_A100(){
Serial.println("#27 P1450 T500");
}
void LEG5_A110(){
Serial.println("#27 P1400 T500");
}
void LEG5_A120(){
Serial.println("#27 P1350 T500");
}
void LEG5_A130(){
Serial.println("#27 P1300 T500");
}

/************LEG 5B**************/

void LEG5_B50(){
Serial.println("#26 P1100 T500");
}
void LEG5_B60(){
Serial.println("#26 P1200 T500");
}
void LEG5_B70(){
Serial.println("#26 P1300 T500");
}
void LEG5_B80(){
Serial.println("#26 P1400 T500");
}
void LEG5_B90(){
Serial.println("#26 P1500 T500");
}
void LEG5_B100(){
Serial.println("#26 P1600 T500");
}
void LEG5_B110(){
Serial.println("#26 P1700 T500");
}
void LEG5_B120(){
Serial.println("#26 P1800 T500");
}
void LEG5_B130(){
Serial.println("#26 P1900 T500");
}

/************LEG 6 *************************/
/************LEG 6A**************/
void LEG6_A50(){
Serial.println("#20 P1700 T500");
}
void LEG6_A60(){
Serial.println("#20 P1650 T500");
}
void LEG6_A70(){
Serial.println("#20 P1600 T500");
}
void LEG6_A80(){
Serial.println("#20 P1550 T500");
}
void LEG6_A90(){
Serial.println("#20 P1500 T500");
}
void LEG6_A100(){
Serial.println("#20 P1450 T500");
}
void LEG6_A110(){
Serial.println("#20 P1400 T500");
}
void LEG6_A120(){
Serial.println("#20 P1350 T500");
}
void LEG6_A130(){
Serial.println("#20 P1300 T500");
}

/************LEG 6B**************/

void LEG6_B50(){
Serial.println("#21 P1900 T500");
}
void LEG6_B60(){
Serial.println("#21 P1800 T500");
}
void LEG6_B70(){
Serial.println("#21 P1700 T500");
}
void LEG6_B80(){
Serial.println("#21 P1600 T500");
}
void LEG6_B90(){
Serial.println("#21 P1500 T500");
}
void LEG6_B100(){
Serial.println("#21 P1400 T500");
}
void LEG6_B110(){
Serial.println("#21 P1300 T500");
}
void LEG6_B120(){
Serial.println("#21 P1200 T500");
}
void LEG6_B130(){
Serial.println("#21 P1100 T500");
}

/************LEG 7*************************/
/************LEG 7A**************/
void LEG7_A50(){
Serial.println("#15 P1700 T500");
}
void LEG7_A60(){
Serial.println("#15 P1650 T500");
}
void LEG7_A70(){
Serial.println("#15 P1600 T500");
}
void LEG7_A80(){
Serial.println("#15 P1550 T500");
}
void LEG7_A90(){
Serial.println("#15 P1500 T500");
}
void LEG7_A100(){
Serial.println("#15 P1450 T500");
}
void LEG7_A110(){
Serial.println("#15 P1400 T500");
}
void LEG7_A120(){
Serial.println("#15 P1350 T500");
}
void LEG7_A130(){
Serial.println("#15 P1300 T500");
}

/************LEG 7*************/

void LEG7_B50(){
Serial.println("#14 P1900 T500");
}
void LEG7_B60(){
Serial.println("#14 P1800 T500");
}
void LEG7_B70(){
Serial.println("#14 P1700 T500");
}
void LEG7_B80(){
Serial.println("#14 P1600 T500");
}
void LEG7_B90(){
Serial.println("#14 P1500 T500");
}
void LEG7_B100(){
Serial.println("#14 P1400 T500");
}
void LEG7_B110(){
Serial.println("#14 P1300 T500");
}
void LEG7_B120(){
Serial.println("#14 P1200 T500");
}
void LEG7_B130(){
Serial.println("#14 P1100 T500");
}

/************LEG 8*************************/
/************LEG 8A**************/
void LEG8_A50(){
Serial.println("#0 P1700 T500");
}
void LEG8_A60(){
Serial.println("#0 P1650 T500");
}
void LEG8_A70(){
Serial.println("#0 P1600 T500");
}
void LEG8_A80(){
Serial.println("#0 P1550 T500");
}
void LEG8_A90(){
Serial.println("#0 P1500 T500");
}
void LEG8_A100(){
Serial.println("#0 P1450 T500");
}
void LEG8_A110(){
Serial.println("#0 P1400 T500");
}
void LEG8_A120(){
Serial.println("#0 P1350 T500");
}
void LEG8_A130(){
Serial.println("#0 P1300 T500");
}

/************LEG 8*************/

void LEG8_B50(){
Serial.println("#1 P1200 T500");
}
void LEG8_B60(){
Serial.println("#1 P1300 T500");
}
void LEG8_B70(){
Serial.println("#1 P1400 T500");
}
void LEG8_B80(){
Serial.println("#1 P1500 T500");
}
void LEG8_B90(){
Serial.println("#1 P1600 T500");
}
void LEG8_B100(){
Serial.println("#1 P1700 T500");
}
void LEG8_B110(){
Serial.println("#1 P1800 T500");
}
void LEG8_B120(){
Serial.println("#1 P1900 T500");
}
void LEG8_B130(){
Serial.println("#1 P2000 T500");
}
/************LEG 9*************************/
/************LEG 9A**************/
void LEG9_A50(){
Serial.println("#13 P1700 T500");
}
void LEG9_A60(){
Serial.println("#13 P1650 T500");
}
void LEG9_A70(){
Serial.println("#13 P1600 T500");
}
void LEG9_A80(){
Serial.println("#13 P1550 T500");
}
void LEG9_A90(){
Serial.println("#13 P1500 T500");
}
void LEG9_A100(){
Serial.println("#13 P1450 T500");
}
void LEG9_A110(){
Serial.println("#13 P1400 T500");
}
void LEG9_A120(){
Serial.println("#13 P1350 T500");
}
void LEG9_A130(){
Serial.println("#13 P1300 T500");
}

/************LEG 9B*************/

void LEG9_B50(){
Serial.println("#12 P1900 T500");
}
void LEG9_B60(){
Serial.println("#12 P1800 T500");
}
void LEG9_B70(){
Serial.println("#12 P1700 T500");
}
void LEG9_B80(){
Serial.println("#12 P1600 T500");
}
void LEG9_B90(){
Serial.println("#12 P1500 T500");
}
void LEG9_B100(){
Serial.println("#12 P1400 T500");
}
void LEG9_B110(){
Serial.println("#12 P1300 T500");
}
void LEG9_B120(){
Serial.println("#12 P1200 T500");
}
void LEG9_B130(){
Serial.println("#12 P1100 T500");
}

/************LEG 10*************************/
/************LEG 10A**************/
void LEG10_A50(){
Serial.println("#2 P1700 T500");
}
void LEG10_A60(){
Serial.println("#2 P1650 T500");
}
void LEG10_A70(){
Serial.println("#2 P1600 T500");
}
void LEG10_A80(){
Serial.println("#2 P1550 T500");
}
void LEG10_A90(){
Serial.println("#2 P1500 T500");
}
void LEG10_A100(){
Serial.println("#2 P1450 T500");
}
void LEG10_A110(){
Serial.println("#2 P1400 T500");
}
void LEG10_A120(){
Serial.println("#2 P1350 T500");
}
void LEG10_A130(){
Serial.println("#2 P1300 T500");
}

/************LEG 10B*************/

void LEG10_B50(){
Serial.println("#3 P1100 T500");
}
void LEG10_B60(){
Serial.println("#3 P1200 T500");
}
void LEG10_B70(){
Serial.println("#3 P1300 T500");
}
void LEG10_B80(){
Serial.println("#3 P1400 T500");
}
void LEG10_B90(){
Serial.println("#3 P1500 T500");
}
void LEG10_B100(){
Serial.println("#3 P1600 T500");
}
void LEG10_B110(){
Serial.println("#3 P1700 T500");
}
void LEG10_B120(){
Serial.println("#3 P1800 T500");
}
void LEG10_B130(){
Serial.println("#3 P1900 T500");
}
/************LEG 11*************************/
/************LEG 11A**************/
void LEG11_A50(){
Serial.println("#11 P1700 T500");
}
void LEG11_A60(){
Serial.println("#11 P1650 T500");
}
void LEG11_A70(){
Serial.println("#11 P1600 T500");
}
void LEG11_A80(){
Serial.println("#11 P1550 T500");
}
void LEG11_A90(){
Serial.println("#11 P1500 T500");
}
void LEG11_A100(){
Serial.println("#11 P1450 T500");
}
void LEG11_A110(){
Serial.println("#11 P1400 T500");
}
void LEG11_A120(){
Serial.println("#11 P1350 T500");
}
void LEG11_A130(){
Serial.println("#11 P1300 T500");
}

/************LEG 11B*************/

void LEG11_B50(){
Serial.println("#10 P1900 T500");
}
void LEG11_B60(){
Serial.println("#10 P1800 T500");
}
void LEG11_B70(){
Serial.println("#10 P1700 T500");
}
void LEG11_B80(){
Serial.println("#10 P1600 T500");
}
void LEG11_B90(){
Serial.println("#10 P1500 T500");
}
void LEG11_B100(){
Serial.println("#10 P1400 T500");
}
void LEG11_B110(){
Serial.println("#10 P1300 T500");
}
void LEG11_B120(){
Serial.println("#10 P1200 T500");
}
void LEG11_B130(){
Serial.println("#10 P1100 T500");
}

/************LEG 12*************************/
/************LEG 12A**************/
void LEG12_A50(){
Serial.println("#4 P1700 T500");
}
void LEG12_A60(){
Serial.println("#4 P1650 T500");
}
void LEG12_A70(){
Serial.println("#4 P1600 T500");
}
void LEG12_A80(){
Serial.println("#4 P1550 T500");
}
void LEG12_A90(){
Serial.println("#4 P1500 T500");
}
void LEG12_A100(){
Serial.println("#4 P1450 T500");
}
void LEG12_A110(){
Serial.println("#4 P1400 T500");
}
void LEG12_A120(){
Serial.println("#4 P1350 T500");
}
void LEG12_A130(){
Serial.println("#4 P1300 T500");
}

/************LEG 12*************/

void LEG12_B50(){
Serial.println("#5 P1100 T500");
}
void LEG12_B60(){
Serial.println("#5 P1200 T500");
}
void LEG12_B70(){
Serial.println("#5 P1300 T500");
}
void LEG12_B80(){
Serial.println("#5 P1400 T500");
}
void LEG12_B90(){
Serial.println("#5 P1500 T500");
}
void LEG12_B100(){
Serial.println("#5 P1600 T500");
}
void LEG12_B110(){
Serial.println("#5 P1700 T500");
}
void LEG12_B120(){
Serial.println("#5 P1800 T500");
}
void LEG12_B130(){
Serial.println("#5 P1900 T500");
}

// Checks if there is something right in front of it using Grids
boolean isFrontOpen () {
  int nextNumber = getFrontNumber();
  if (nextNumber == 0){
    return true;
  }
  else {
    return false;
  }
}

// Checks if there is something to the Right of it using Grids
boolean isRightOpen(){
  int nextNumber = getRightNumber();
  if (nextNumber == 0){
    return true;
  }
  else {
    return false;
  }
}

// Checks if there is something to the Left of it using Grids
boolean isLeftOpen(){
  int nextNumber = getLeftNumber();
  if (nextNumber == 0){
    return true;
  }
  else {
    return false;
  }
}

void turnRight () {
  Serial.println("Right");
  if (robotDirection == 0)
    robotDirection = 1;
  else if (robotDirection == 1)
    robotDirection = 2;
  else if (robotDirection == 2)
    robotDirection = 3;
  else if (robotDirection == 3)
    robotDirection = 0;
  delay (500);
  Serial.print("  xcoordinate " );
  Serial.print(xcoordinate);
  delay (500);
  Serial.print(" ycoordinate ");
  Serial.print(ycoordinate);
  delay (500);
  Serial.print("  robot direction: ");
  Serial.print(robotDirection);
  delay (500);
  Serial.println();

  delay(1000);
}
void turnLeft () {
  Serial.println("Left");
  if (robotDirection == 0)
    robotDirection = 3;
  else if (robotDirection == 1)
    robotDirection = 0;
  else if (robotDirection == 2)
    robotDirection = 1;
  else if (robotDirection == 3)
    robotDirection = 2;
  delay (500);
  Serial.print("  xcoordinate " );
  Serial.print(xcoordinate);
  delay (500);
  Serial.print(" ycoordinate ");
  Serial.print(ycoordinate);
  delay (500);
  Serial.print("  robot direction: ");
  Serial.print(robotDirection);
  delay(500);
  Serial.println();
  delay(1000);
}
void turnAround () {
  //  delay(1000);
  Serial.println("Around");
  if (robotDirection == 0)
    robotDirection = 2;
  else if (robotDirection == 1)
    robotDirection = 3;
  else if (robotDirection == 2)
    robotDirection = 0;
  else if (robotDirection == 3)
    robotDirection = 1;
  delay (500);
  Serial.print("  xcoordinate " );
  Serial.print(xcoordinate);
  delay (500);
  Serial.print(" ycoordinate ");
  Serial.print(ycoordinate);
  delay (500);
  Serial.print("  robot direction: ");
  Serial.print(robotDirection);
  delay(500);
  Serial.println();

  delay(1000);
}
int getFrontNumber() {
  if (robotDirection == 0) {
    return arraything  [ycoordinate - 1][xcoordinate];
  }
  if (robotDirection == 1)  {
    return arraything  [ycoordinate][xcoordinate + 1];
  }
  if (robotDirection == 2) {
    return arraything [ycoordinate + 1][xcoordinate] ;
  }
  if (robotDirection == 3) {
    return arraything  [ycoordinate][xcoordinate - 1];
  }
}
int getRightNumber() {
  if (robotDirection == 0) {
    return arraything [ycoordinate][xcoordinate + 1] ;

  }
  if (robotDirection == 1)  {
    return arraything  [ycoordinate + 1][xcoordinate];

  }
  if (robotDirection == 2) {
    return arraything  [ycoordinate][xcoordinate - 1];
  }
  if (robotDirection == 3) {
    return arraything  [ycoordinate - 1][xcoordinate];
  }
}

// Gets the number on the Grid of the Space to the Left of it.
int getLeftNumber() {
  if (robotDirection == 0) {
    return arraything [ycoordinate][xcoordinate - 1] ;
  }
  if (robotDirection == 1)  {
    return arraything  [ycoordinate - 1][xcoordinate];
  }
  if (robotDirection == 2) {
    return arraything [ycoordinate][xcoordinate + 1] ;
  }
  if (robotDirection == 3) {
    return arraything  [ycoordinate + 1][xcoordinate];
  }
}
